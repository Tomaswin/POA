type User {

	userId: ID!
	name: String
	lastName: String
	email: String!
	password: String!
	points: Int!
	exHistory: ExchangeHistory
	exchanges: [Exchange]
}

type Product {

	productId: ID!
	name: String!
	description: String
	availability: Boolean!
}

scalar Date

type Exchange {

	user: User!
	productList: [Product!]!
	date: Date!
	totalPoints: Int!
}

type ExchangeHistory {

	user: User!
	exchangeList: [Exchange]
}

type Query{
	
	users: [User]
}

type Mutation{

	createUser(name: String, lastName: String, email: String!, password: String!, points: Int!): User	
}

